flask --app app.py --debug run

<!-- <script>
  let image = document.querySelector('#image');
  let form = document.querySelector('#pop-up_form')
  image.addEventListener('click', function () {
    form.style.visibility = 'visible'
  });

</script> -->


CREATE TABLE symptoms (date_time DATETIME PRIMARY KEY, symptom TEXT NOT NULL, notes TEXT, x INTEGER, y INTEGER);



<script>
  marker.style.visibility = "visible"
  var x = +'{{ status[0].x }}'
  var y = +'{{ status[0].y }}'
  marker.style.left =  x + "px"
  marker.style.top =  y + "px"

  // for loop?
</script>

{% for i in status %}
<img class="markers" src="src="../static/marker.jpg" width="3%"" alt="marker">

<script>
  let markers = document.querySelector('img')
  console.log(typeof(markers))
  for (j in status) {
    markers.style.visibility = "visible"
    var x = +'{{ status[0].x }}'
    var y = +'{{ status[0].y }}'
    markers.style.left =  x + "px"
    markers.style.top =  y + "px"
  }

  // for loop?
</script>
{% endfor %}



Layout Navbar

            <!-- <button class="navbar-toggler" type="button" data-bs-toggle="collapse"
                data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false"
                aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarSupportedContent">
                <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                    <li class="nav-item">
                        <a class="nav-link active" aria-current="page" href="#">
                            <Link>
                            </Link>
                        </a>
                    </li>
                    <li class="nav-item">
                    </li>
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown"
                            aria-expanded="false">
                            Dropdown
                        </a>
                        <ul class="dropdown-menu">
                            <li><a class="dropdown-item" href="#">Action</a></li>
                            <li><a class="dropdown-item" href="#">Another action</a></li>
                            <li>
                                <hr class="dropdown-divider">
                            </li>
                            <li><a class="dropdown-item" href="#">Something else here</a></li>
                        </ul>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link disabled">Disabled</a>
                    </li>
                </ul>
                <form class="d-flex" role="search">
                    <input class="form-control me-2" type="search" placeholder="Search" aria-label="Search">
                    <button class="btn btn-outline-success" type="submit">Search</button>
                </form>
            </div> -->


From add.html

<form action="/add.html" method="post" id="symptom">
  <div class="input-group mb-3">
    <div class="input-group mb-3">
      <input class="form-control" id="enter_symptom" name="symptom" placeholder="Symptom" type="text">
    </div>
    <div class="input-group mb-3">
      <div class="input-group date">
        <input class="form-control" id="datetime" name="datetime" type="datetime-local">
      </div>
    </div>
    <div class="input-group mb-3">
      <span class="input-group-text">Notes</span>
      <textarea aria-label="With textarea" class="form-control" name="notes" id="notes"></textarea>
      <button class="btn btn-outline-secondary" type="submit" id="button-addon2">Add</button>
    </div>
    
<div class="coordinates">
<span id="x"></span>
<span id="y"></span>
</div>
<script type="text/javascript">
  var myImg = document.getElementById("image");
  myImg.onmousedown = GetCoordinates;
</script>
</form>



script from index

// Receive all symptoms from db
  let status = JSON.parse('{{ status|tojson }}');
  // Get hidden marker img from layout and clone it for every entry in db
  let i_marker = document.getElementById("marker")
  for (i in status) {
    let id = status[i].id // Get id from db
    let clone = i_marker.cloneNode(false)
    // Change id of every clone to id from db
    clone.id = id
    // Append clone to div
    document.getElementById("box").appendChild(clone)
    // Adjust merker's position
    if (status[i].visible == 1) {
      clone.style.visibility = "visible"
      clone.className = "markers_visible"
    }
    else if (status[i].visible == 0) {
      clone.style.visibility = "hidden"
      clone.className = "markers_hidden"
    }
    clone.style.left = status[i].x + "px"
    clone.style.top = status[i].y + "px"
  }
  
  // Respond to click on a visible marker
  let markers_visible = document.querySelectorAll('.markers_visible, .markers_hidden')
  for (let j = 0; j < markers_visible.length; j++) {
    markers_visible[j].addEventListener('click', function () {
      document.getElementById("id").value = status[j].id
      document.getElementById("id_del").value = status[j].id
      document.getElementById("id_a").value = status[j].id
      document.getElementById("id_act").value = status[j].id
      document.getElementById("symptom").value = status[j].symptom
      document.getElementById("datetime").value = status[j].date_time.slice(0, 16)
      document.getElementById("notes").value = status[j].notes
      document.getElementById("marker_red").style.visibility = "hidden"
      document.getElementById("button_delete").style.visibility = "visible"
      document.getElementById("button_archive").style.visibility = "visible"
      document.getElementById("button_activate").style.visibility = "visible"
    });
  }

  // Show history
  let h = document.getElementById("history")
  let markers_hidden = document.querySelectorAll('.markers_hidden')
  function show_history() {
    document.getElementById("history").style.display = "none"
    document.getElementById("hide_history").style.display = "inline"
    for (let k = 0; k < markers_hidden.length; k++) {
      markers_hidden[k].style.visibility = "visible"
      markers_hidden[k].src = "../static/marker_blue.jpg"
    }
  }

  // Hide history
  function hide_history() {
    document.getElementById("history").style.display = "inline"
    document.getElementById("hide_history").style.display = "none"
    for (let k = 0; k < markers_hidden.length; k++) {
      markers_hidden[k].style.visibility = "hidden"
    }
  }



  CREATE TABLE users (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, username TEXT NOT NULL, hash TEXT NOT NULL)